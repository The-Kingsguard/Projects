library(rvest)
x <- read_html('https://www.sec.gov/info/edgar/siccodes.htm')
x <- html_table(x, fill = T)
x <- x[[3]]
View(x)
rm_rows <- c(1:9,449)
keep_cols <- c(1,2,4)
x <- x[-rm_rows,keep_cols]
colnames(x) <- c('SIC_Code','AD_Office','Industry_name')
View(x)
base_url <- 'https://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&SIC='
companies <- data.frame()
library(rvest)
# SEC website which lists the SIC codes
x <- read_html('https://www.sec.gov/info/edgar/siccodes.htm')
x <- html_table(x, fill = T)
x <- x[[3]]
# Cleaning up the table - removing blank rows and columns
rm_rows <- c(1:9,449)
keep_cols <- c(1,2,4)
x <- x[-rm_rows,keep_cols]
colnames(x) <- c('SIC_Code','AD_Office','Industry_name')
# Now we have a table of the SIC codes, we'll iterate through the SIC codes and
# look up companies matching those codes
base_url <- 'https://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&SIC='
companies <- data.frame()
for (i in x$SIC_Code) {
# Start with the first page of search results
start <- 0
# Show the maximum number of results (100) on each page, rather than
# the default (40)
result_number <- 100
# This url is a search on Edgar for all companies matching the current
# SIC code
sic_url <- paste0(base_url, i)
# Empty data frame to store the results for each SIC, which will
# then be merged into the overall data frame
temp <- data.frame()
# The while loop ensures that we'll stop on the last page of search
# results, because the final result on the last page will not be a
# multiple of 100, while the previous search pages will contain 100
# results
while (result_number %% 100 == 0) {
a <- html_session(paste0(sic_url,'&start=',start,'&count=100'))
table <- html_node(a, '.tableFile2')
table <- html_table(table)
# If statement accounts for cases where we only get a single
# result on the page, in which case the format changes
if (ncol(table) == 3) {
temp <- rbind(temp, table)
}
# This node lists the number of results on the current page
result_number <- html_node(a, ".items")
result_number <- html_text(result_number)
# This gets the number of the last results on the page
result_number <- as.numeric(gsub('.+ - ', '', result_number))
# Now go to the next 100 results
start <- start + 100
# If there isn't a result number on the page we stop the loop
if (is.na(result_number)) {
result_number <- 1
}
}
# Now if there were any results returned for the SIC code, merge it
# into the overall list of companies
if (nrow(temp) > 0) {
temp$SIC_Code <- i
companies <- rbind(temp, companies)
}
}
# Adds the other SIC fields
companies <- merge(x, companies)
save(companies, file = 'companies.Rda')
View(companies)
